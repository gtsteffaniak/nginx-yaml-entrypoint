
#SSL server data
server {
    listen 443 ssl;
    http2 on;
    server_name www.gportal.link;
    server_name_in_redirect on;

    # Apply the global rate limit to all other requests
    limit_req zone=global burst=20;
    limit_req_log_level error;
    limit_req_status 429;

    # SSL code
    ssl_certificate /etc/nginx/ssl/live/gportal.link/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/gportal.link/privkey.pem;

    location ^~ /.well-known/acme-challenge {
        allow all;
        auth_basic off;
        root /var/www/certbot;
    }
    return 301 https://gportal.link$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name gportal.link;
    server_name_in_redirect on;
    # SSL code
    ssl_certificate /etc/nginx/ssl/live/gportal.link/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/gportal.link/privkey.pem;
    absolute_redirect off;

    proxy_buffering off; # for a single server setup (SSL termination of Varnish), where no caching is done in NGINX itself
    proxy_buffer_size 16m; # should be enough for most PHP websites, or adjust as above
    proxy_busy_buffers_size 24m; # essentially, proxy_buffer_size + 2 small buffers of 4k
    proxy_buffers 64
        16m; # should be enough for most PHP websites, adjust as above to get an accurate value

    # Apply the global rate limit to all other requests
    limit_req zone=global burst=20;
    limit_req_log_level error;
    limit_req_status 429;

    # define error page
    error_page 404 = @notfound;
    error_page 401 = @error401;
    error_page 429 = @error429;
    error_page 502 = @error502;
    location @502 {
        return 301 https://gportal.link/error_page/502/;
    }
    location @notfound {
        return 301 https://gportal.link/error_page/404/;
    }
    location @error401 {
        add_header Set-Cookie
            "redirectUrl=$scheme://$http_host$request_uri;Domain=.gportal.link;path=/";
        return 302 https://gportal.link/login/;
    }
    location @error429 {
        return 302 https://gportal.link/error_page/429/;
    }
    location ^~ /.well-known/acme-challenge {
        allow all;
        auth_basic off;
        root /var/www/certbot;
    }
    location /error_page/ {
        proxy_pass http://home:8080/error_page/;
    }
    location /api/health/ {
        proxy_pass http://home:8080/api/health;
        limit_req zone=strict burst=5;
    }
    location /static/ {
        proxy_pass http://home:8080/static/;
    }
    location /blog/ {
        proxy_pass https://gtsteffaniak.github.io/blog/;
    }
    location /build/ {
        proxy_pass http://home:8080/build/;
    }
    location = /favicon.ico {
        proxy_pass http://home:8080/;
    }
    location /auth/ {
        proxy_set_header content-type "application/json";
        set $auth_header $cookie_api_key;
        if ($cookie_api_key = "" ) {
            set $auth_header $http_authorization;
        }
        proxy_pass http://home:8080/auth/;
        proxy_pass_request_body on;
        proxy_set_header Authorization $auth_header;
        proxy_pass_header Authorization;
        proxy_set_header X-Original-URI $request_uri;
        limit_req zone=strict;
    }
    location /login/ {
        proxy_pass http://home:8080/login/;
        # Set the original URL as a header
        proxy_set_header X-Original-URL $request_uri;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        limit_req zone=medium burst=5;
    }
    location = / {
        # prevent caching
        add_header Cache-Control "no-cache";
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_pass http://home:8080/;
        limit_req zone=strict;
    }
    location / {
        auth_request_set $user $upstream_http_x_forwarded_user;
        proxy_set_header X-Forwarded-User $user;
        auth_request /auth/authorize;
        auth_request_set $auth_status $upstream_status;
        proxy_pass http://home:8080;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        add_header Access-Control-Allow-Origin files.gportal.link;
    }
    location /grafana/ {
        auth_request_set $user $upstream_http_x_forwarded_user;
        proxy_set_header X-Forwarded-User $user;
        proxy_set_header Host 10.13.13.3;
        proxy_set_header Origin https://10.13.13.3;
        auth_request /auth/authorize;
        auth_request_set $auth_status $upstream_status;
        proxy_pass http://10.13.13.3:9000/grafana/;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        add_header Access-Control-Allow-Origin files.gportal.link;
    }
    location /shinobi/ {
        limit_req zone=unlimited burst=10000;
        proxy_http_version 1.1;
        proxy_set_header Connection $http_connection;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        auth_request_set $user $upstream_http_x_forwarded_user;
        proxy_set_header X-Forwarded-User $user;
        auth_request /auth/authorize;
        auth_request_set $auth_status $upstream_status;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        add_header Access-Control-Allow-Origin files.gportal.link;
        proxy_pass http://10.13.13.3:9555/;
    }
    location /photos/ {
        #sub_filter 'href="/' 'href="photos/';
        #sub_filter_once off;
        proxy_http_version 1.1;
        proxy_set_header Connection $http_connection;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        auth_request_set $user $upstream_http_x_forwarded_user;
        proxy_set_header X-Forwarded-User $user;
        auth_request /auth/authorize;
        auth_request_set $auth_status $upstream_status;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        add_header Access-Control-Allow-Origin files.gportal.link;
        proxy_pass http://10.13.13.3:9283;
    }
    location /search/ {
        auth_request_set $user $upstream_http_x_forwarded_user;
        auth_request /auth/authorize;
        auth_request_set $auth_status $upstream_status;
        proxy_pass https://www.google.com/;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        add_header Access-Control-Allow-Origin files.gportal.link;
    }

}